<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.web.SearchWeb.bookmark.dao.BookmarkDao"> <!--Dao 이름-->

    <!-- 북마크 확인 -->
    <select id="checkBookmark" parameterType="com.web.SearchWeb.bookmark.dto.BookmarkCheckDto">
        select COUNT(*)
        from bookmark
        WHERE member_memberId=#{member_memberId}
         AND website_websiteId=#{website_websiteId}
    </select>


    <!-- 북마크 단일 조회  -->
    <select id="selectBookmark" parameterType="map" resultType="com.web.SearchWeb.bookmark.domain.Bookmark">
        select *
        from bookmark
        WHERE member_memberId=#{memberId}
         AND bookmarkId =#{bookmarkId};
    </select>



    <!-- 북마크 목록 조회 (시간) -->
    <select id="selectBookmarkList" parameterType="map" resultType="com.web.SearchWeb.bookmark.domain.Bookmark">
        select *
        from bookmark
        WHERE member_memberId=#{memberId}
        ORDER BY
        <choose>
            <when test="sort == 'Newest'">
                modified_date DESC
            </when>
            <when test="sort == 'Oldest'">
                modified_date ASC
            </when>
        </choose>
    </select>


    <!-- 북마크 목록 조회(시간, 태그) -->
    <select id="selectBookmarkListByTag" parameterType="map" resultType="com.web.SearchWeb.bookmark.domain.Bookmark">
        select *
        from bookmark
        WHERE member_memberId=#{member_memberId}
        <if test="tag != 'All'">
            AND tag = #{tag}
        </if>
        ORDER BY
        <choose>
            <when test="sort == 'Oldest'">
                modified_date ASC
            </when>
            <when test="sort == 'Newest'">
                modified_date DESC
            </when>
        </choose>
    </select>


    <!-- 북마크 추가 -->
    <insert id="insertBookmark" parameterType="com.web.SearchWeb.bookmark.dto.BookmarkDto">
        insert
        into
        bookmark(member_memberId, website_websiteId, name, description, url)
        values(#{member_memberId}, #{website_websiteId}, #{name}, #{description}, #{url});
    </insert>


    <!-- 북마크 추가 (사용자 직접 추가) -->
    <insert id="insertBookmarkForUser" parameterType="com.web.SearchWeb.bookmark.dto.BookmarkDto" >
        insert
        into
        bookmark(member_memberId, name, description, url, tag)
        values(#{member_memberId},#{name}, #{description}, #{url}, #{tag});
    </insert>


    <!-- 북마크 수정 -->
    <update id="updateBookmark" parameterType="map">
        update bookmark
        SET
        name = #{bookmarkDto.name},
        description = #{bookmarkDto.description},
        url = #{bookmarkDto.url},
        tag = #{bookmarkDto.tag}
        WHERE
        bookmarkId = #{bookmarkId}
    </update>


    <!-- 북마크 삭제 -->
    <delete id="deleteBookmark" parameterType="com.web.SearchWeb.bookmark.dto.BookmarkCheckDto">
        delete
        from bookmark
        WHERE member_memberId=#{member_memberId}
         AND website_websiteId=#{website_websiteId};
    </delete>


    <!-- 마이페이지 북마크 삭제 -->
    <delete id="deleteBookmarkMyPage" parameterType="map">
        delete
        from bookmark
        WHERE member_memberId=#{memberId}
         AND bookmarkId = #{bookmarkId};
    </delete>


    <!-- 북마크-웹사이트 조회 -->
    <select id="selectBookmarkWebsite" resultType="com.web.SearchWeb.bookmark.domain.BookmarkWebsite">
        select b.member_memberId, w.*
         FROM bookmark b
         JOIN website w
         ON b.website_websiteId = w.websiteId
         where member_memberId=#{member_memberId};
    </select>


    <!-- 사용자 태그 목록 조회 -->
    <select id="selectTags" parameterType="int" resultType="string">
        select DISTINCT tag
        from bookmark
        WHERE member_memberId=#{member_memberId}
        AND tag IS NOT NULL
        And tag != ''
    </select>
</mapper>



