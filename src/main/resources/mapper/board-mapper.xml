<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.web.SearchWeb.board.dao.BoardDao"> <!--Dao 이름-->

   <!-- 게시글 생성-->
    <insert id="insertBoard" parameterType="map">
        INSERT INTO board(member_memberId, nickname, job, major, url, title, summary, description, hashtags)
        VALUES (#{memberId}, #{boardDto.nickname}, #{boardDto.job}, #{boardDto.major}, #{boardDto.url}, #{boardDto.title}, #{boardDto.summary}, #{boardDto.description}, #{boardDto.hashtags});
    </insert>


    <!-- 게시글 조회(검색어, 최신순/인기순)  -->
    <select id="selectBoardList" parameterType="map" resultType="com.web.SearchWeb.board.domain.Board">
        SELECT * FROM board
        <where>
            <!-- 검색어가 있는 경우 -->
            <if test="query != null and query != ''">
                (title LIKE CONCAT('%', #{query}, '%')
                OR
                description LIKE CONCAT('%', #{query}, '%'))
            </if>

            <!-- 게시글 타입 선택 -->
            <!-- 웹사이트 공유 필터링 (url이 존재하는 경우만) -->
            <if test="postType == 'website'">
                AND url IS NOT NULL
            </if>
            <!-- 질문 필터링 (url이 존재하지 않는 경우만) -->
            <if test="postType == 'question'">
                AND url IS NULL
            </if>

        </where>
        <!-- 정렬 조건 -->
        <if test="sort != null">
            <choose>
                <when test="sort.equalsIgnoreCase('popular')">
                    ORDER BY likes_count DESC
                </when>
                <otherwise>
                    ORDER BY created_date DESC
                </otherwise>
            </choose>
        </if>
    </select>


    <!-- 게시글 단일 조회 -->
    <select id="selectBoard" resultType="com.web.SearchWeb.board.domain.Board">
        SELECT * FROM board
        where boardId = #{boardId}
    </select>


    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="Map">
        update board
        SET
        url = #{boardDto.url},
        title = #{boardDto.title},
        summary = #{boardDto.summary},
        description = #{boardDto.description},
        hashtags = #{boardDto.hashtags}
        WHERE
        boardId = #{boardId}
    </update>


    <!-- 게시글 삭제 -->
    <delete id="deleteBoard" parameterType="Map">
        delete from board
        where
        boardId = #{boardId}
        and
        member_memberId = #{memberId}

    </delete>


    <!-- 게시글 북마크 수 수정 -->
    <update id="updateBookmarkCount" parameterType="map">
        update board
        SET
        bookmarks_count = #{bookmarkCount}
        WHERE boardId = #{boardId}
    </update>


    <!-- 게시글 조회수 증가 -->
    <update id="incrementViewCount">
        UPDATE board
        SET views_count = views_count + 1
        WHERE boardId = #{boardId}
    </update>


    <!-- 게시글 좋아요 증가 -->
    <update id="incrementLikeCount">
        UPDATE board
        SET likes_count = likes_count + 1
        WHERE boardId = #{boardId}
    </update>


    <!-- 게시글 좋아요 감소 -->
    <update id="decrementLikeCount">
        UPDATE board
        SET likes_count = likes_count - 1
        WHERE boardId = #{boardId}
    </update>


    <!-- 게시글 댓글 수 증가 -->
    <update id="incrementCommentCount">
        UPDATE board
        SET comments_count = comments_count + 1
        WHERE boardId = #{boardId}
    </update>


    <!-- 게시글 댓글 수 감소 -->
    <update id="decrementCommentCount">
        UPDATE board
        SET comments_count = comments_count - 1
        WHERE boardId = #{boardId}
    </update>


</mapper>